!function(){"use strict"}(),function(){"use strict";function t(t,o,n){t.$state=o,t.$stateParams=n,t.$on("$stateChangeStart",function(t,o,n){console.log("$stateChangeStart to "+o.to+"- fired when the transition begins. toState,toParams : \n",o,n)}),t.$on("$stateChangeError",function(){console.log("$stateChangeError - fired when an error occurs during transition."),console.log(arguments)}),t.$on("$stateChangeSuccess",function(t,o){console.log("$stateChangeSuccess to "+o.name+"- fired once the state transition is complete.")}),t.$on("$viewContentLoaded",function(t){console.log("$viewContentLoaded - fired after dom rendered",t)}),t.$on("$stateNotFound",function(t,o,n,e){console.log("$stateNotFound "+o.to+"  - fired when a state cannot be found by its name."),console.log(o,n,e)})}angular.module("app.sections",["ui.router"]),angular.module("app.sections").run(t),t.$inject=["$rootScope","$state","$stateParams"]}(),function(){"use strict";function t(t,o){function n(o,n){function r(o){o.forEach(function(o){o.resolve=angular.extend(o.resolve||{},e.resolveAlways),t.state(o),i.push(o)})}function a(){return n.get().filter(function(t){return t.settings&&t.settings.module})}function s(){return i}var i=[],u={getSections:s,register:r,getModules:a};return u}var e={resolveAlways:{}};this.configure=function(t){angular.extend(e,t)},o.html5Mode(!0),this.$get=n,n.$inject=["$rootScope","$state"]}angular.module("app.sections").provider("sectionManager",t),t.$inject=["$stateProvider","$locationProvider"]}(),function(){"use strict";angular.module("app.logging",[])}(),function(){"use strict";function t(t){function o(o,n){t.info("Info: "+o,n)}function n(o,n){t.info("WARNING: "+o,n)}function e(o,n){t.error("ERROR: "+o,n)}var r={info:o,warning:n,error:e,log:t};return r}angular.module("app.logging").service("logger",t),t.$inject=["$log"]}(),function(){"use strict"}(),function(){"use strict";function t(t){t.register(o())}function o(){return[{name:"dashboard",url:"",controller:"DashboardController",controllerAs:"vm",templateUrl:"app/areas/dashboard/dashboard.html",settings:{module:!0,order:1}}]}angular.module("app.dashboard",["app.sections"]).run(t),t.$inject=["sectionManager"]}(),function(){"use strict";function t(){this.message="Hello World"}angular.module("app.dashboard").controller("DashboardController",t)}(),function(){"use strict";angular.module("app.layout",["ui.bootstrap"])}(),function(){"use strict";function t(t){var o=this;o.sections=t.getModules()}angular.module("app.layout").controller("ShellController",t),t.$inject=["sectionManager"]}(),function(){"use strict"}(),function(){"use strict";angular.module("solomon",["app.layout","app.logging","app.sections","solomon.partials","app.dashboard","symbiote.common"])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi9zZWN1cml0eS9zZWN1cml0eVNlcnZpY2UuanMiLCJjb21tb24vcm91dGluZy9zZWN0aW9ucy5tb2R1bGUuanMiLCJjb21tb24vcm91dGluZy9zZWN0aW9ucy5tYW5hZ2VyLmpzIiwiY29tbW9uL2xvZ2dpbmcvbG9nZ2VyLm1vZHVsZS5qcyIsImNvbW1vbi9sb2dnaW5nL2xvZ2dlci5zZXJ2aWNlLmpzIiwiYXJlYXMvbG9naW4vbG9naW4ubW9kdWxlLmpzIiwiYXJlYXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5tb2R1bGUuanMiLCJhcmVhcy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbnRyb2xsZXIuanMiLCJsYXlvdXQvbGF5b3V0Lm1vZHVsZS5qcyIsImxheW91dC9zaGVsbC5jb250cm9sbGVyLmpzIiwibGF5b3V0L2xheW91dC5zdGF0ZXMuanMiLCJzb2xvbW9uLmpzIl0sIm5hbWVzIjpbImRlYnVnUm91dGVzIiwiJHJvb3RTY29wZSIsIiRzdGF0ZSIsIiRzdGF0ZVBhcmFtcyIsIiRvbiIsImV2ZW50IiwidG9TdGF0ZSIsInRvUGFyYW1zIiwiY29uc29sZSIsImxvZyIsInRvIiwiYXJndW1lbnRzIiwibmFtZSIsInVuZm91bmRTdGF0ZSIsImZyb21TdGF0ZSIsImZyb21QYXJhbXMiLCJhbmd1bGFyIiwibW9kdWxlIiwicnVuIiwic2VjdGlvbk1hbmFnZXJQcm92aWRlciIsIiRzdGF0ZVByb3ZpZGVyIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCJTZWN0aW9uTWFuYWdlclNlcnZpY2UiLCJyZWdpc3RlclNlY3Rpb25zIiwic2VjdGlvbnMiLCJmb3JFYWNoIiwic3RhdGUiLCJyZXNvbHZlIiwiZXh0ZW5kIiwiY29uZmlnIiwicmVzb2x2ZUFsd2F5cyIsIl9zZWN0aW9ucyIsInB1c2giLCJnZXRNb2R1bGVzIiwiZ2V0IiwiZmlsdGVyIiwieCIsInNldHRpbmdzIiwiZ2V0U2VjdGlvbnMiLCJzZXJ2aWNlIiwicmVnaXN0ZXIiLCJjb25maWd1cmUiLCJvcHRzIiwiaHRtbDVNb2RlIiwiJGdldCIsInByb3ZpZGVyIiwibG9nZ2VyU2VydmljZSIsIiRsb2ciLCJpbmZvIiwibWVzc2FnZSIsImRhdGEiLCJ3YXJuaW5nIiwiZXJyb3IiLCJhcHBSdW4iLCJzZWN0aW9uTWFuYWdlciIsImdldFN0YXRlcyIsInVybCIsImNvbnRyb2xsZXIiLCJjb250cm9sbGVyQXMiLCJ0ZW1wbGF0ZVVybCIsIm9yZGVyIiwiRGFzaGJvYXJkQ29udHJvbGxlciIsIlNoZWxsQ29udHJvbGxlciIsInZtIl0sIm1hcHBpbmdzIjoiQ0FBQyxXQUNHLGdCQ0RILFdBQ0csWUFNSixTQUFTQSxHQUFZQyxFQUFZQyxFQUFRQyxHQU1yQ0YsRUFBV0MsT0FBU0EsRUFDcEJELEVBQVdFLGFBQWVBLEVBRTFCRixFQUFXRyxJQUFJLG9CQUFxQixTQUFVQyxFQUFPQyxFQUFTQyxHQUMxREMsUUFBUUMsSUFBSSx3QkFBMEJILEVBQVFJLEdBQUssNERBQTZESixFQUFTQyxLQUc3SE4sRUFBV0csSUFBSSxvQkFBcUIsV0FDaENJLFFBQVFDLElBQUkscUVBQ1pELFFBQVFDLElBQUlFLGFBR2hCVixFQUFXRyxJQUFJLHNCQUF1QixTQUFVQyxFQUFPQyxHQUNuREUsUUFBUUMsSUFBSSwwQkFBNEJILEVBQVFNLEtBQU8sb0RBRzNEWCxFQUFXRyxJQUFJLHFCQUFzQixTQUFVQyxHQUMzQ0csUUFBUUMsSUFBSSxnREFBaURKLEtBR2pFSixFQUFXRyxJQUFJLGlCQUFrQixTQUFVQyxFQUFPUSxFQUFjQyxFQUFXQyxHQUN2RVAsUUFBUUMsSUFBSSxrQkFBb0JJLEVBQWFILEdBQUssdURBQ2xERixRQUFRQyxJQUFJSSxFQUFjQyxFQUFXQyxLQWxDN0NDLFFBQVFDLE9BQU8sZ0JBQWlCLGNBR2hDRCxRQUFRQyxPQUFPLGdCQUFnQkMsSUFBSWxCLHVEQ0psQyxXQUNHLFlBSUosU0FBU21CLEdBQXVCQyxFQUFnQkMsR0FnQi9DLFFBQVNDLEdBQXNCckIsRUFBWUMsR0FZMUMsUUFBU3FCLEdBQWlCQyxHQUN6QkEsRUFBU0MsUUFBUSxTQUFVQyxHQUMxQkEsRUFBTUMsUUFDTFgsUUFBUVksT0FBT0YsRUFBTUMsWUFBZUUsRUFBT0MsZUFDNUNWLEVBQWVNLE1BQU1BLEdBQ3JCSyxFQUFVQyxLQUFLTixLQUlqQixRQUFTTyxLQUNMLE1BQU8vQixHQUFPZ0MsTUFBTUMsT0FBTyxTQUFVQyxHQUNqQyxNQUFPQSxHQUFFQyxVQUFZRCxFQUFFQyxTQUFTcEIsU0FJeEMsUUFBU3FCLEtBRUwsTUFBT1AsR0EzQlIsR0FBSUEsTUFFSFEsR0FDSEQsWUFBYUEsRUFDYkUsU0FBVWpCLEVBQ0RVLFdBQVlBLEVBR3RCLE9BQU9NLEdBeEJSLEdBQUlWLElBQ0hDLGlCQUdELE1BQUtXLFVBQVksU0FBVUMsR0FDMUIxQixRQUFRWSxPQUFPQyxFQUFRYSxJQUd4QnJCLEVBQWtCc0IsV0FBVSxHQUc1QixLQUFLQyxLQUFPdEIsb0NBakJiTixRQUFRQyxPQUFPLGdCQUNiNEIsU0FBUyxpQkFBa0IxQix1RENGNUIsV0FDRyxZQUFKSCxTQUFRQyxPQUFPLHFCQ0RkLFdBQ0csWUFJSixTQUFTNkIsR0FBY0MsR0FZbkIsUUFBU0MsR0FBS0MsRUFBU0MsR0FDbkJILEVBQUtDLEtBQUssU0FBV0MsRUFBU0MsR0FHbEMsUUFBU0MsR0FBUUYsRUFBU0MsR0FDdEJILEVBQUtDLEtBQUssWUFBY0MsRUFBU0MsR0FHckMsUUFBU0UsR0FBTUgsRUFBU0MsR0FDcEJILEVBQUtLLE1BQU0sVUFBWUgsRUFBU0MsR0FuQnBDLEdBQUlYLElBQ0FTLEtBQU1BLEVBQ05HLFFBQVNBLEVBQ1RDLE1BQU9BLEVBQ1AzQyxJQUFLc0MsRUFHVCxPQUFPUixHQWJYdkIsUUFBUUMsT0FBTyxlQUNWc0IsUUFBUSxTQUFVTyx5QkNGdEIsV0FDRyxnQkNESCxXQUNHLFlBbUJKLFNBQVNPLEdBQU9DLEdBRVpBLEVBQWVkLFNBQVNlLEtBSTVCLFFBQVNBLEtBQ0wsUUFFUTNDLEtBQU0sWUFDTjRDLElBQUssR0FDTEMsV0FBWSxzQkFDWkMsYUFBYyxLQUNkQyxZQUFhLHFDQUNidEIsVUFDSXBCLFFBQVEsRUFDUjJDLE1BQU8sS0FwQ3ZCNUMsUUFBUUMsT0FBTyxpQkFBa0IsaUJBQzVCQyxJQUFJbUMsbUNDRFIsV0FDRyxZQUlKLFNBQVNRLEtBQ0wsS0FBS1osUUFBVSxjQUxuQmpDLFFBQVFDLE9BQU8saUJBQ1Z3QyxXQUFXLHNCQUF1QkksTUNGdEMsV0FDRyxZQURKN0MsU0FBUUMsT0FBTyxjQUFlLG9CQ0E3QixXQUNHLFlBR0osU0FBUzZDLEdBQWdCUixHQUVyQixHQUFJUyxHQUFLLElBQ1RBLEdBQUd2QyxTQUFXOEIsRUFBZXJCLGFBUGpDakIsUUFBUUMsT0FBTyxjQUNWd0MsV0FBVyxrQkFBbUJLLG1DQ0RsQyxXQUNHLGdCQ0RILFdBQ0csWUFESjlDLFNBQVFDLE9BQU8sV0FFUCxhQUNBLGNBQ0EsZUFDQSxtQkFDQSxnQkFDQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG59KCkpOyIsIlxyXG5hbmd1bGFyLm1vZHVsZSgnYXBwLnNlY3Rpb25zJywgWyd1aS5yb3V0ZXInXSk7XHJcblxyXG5cclxuYW5ndWxhci5tb2R1bGUoJ2FwcC5zZWN0aW9ucycpLnJ1bihkZWJ1Z1JvdXRlcyk7XHJcblxyXG4vKiBAbmdJbmplY3QgKi9cclxuZnVuY3Rpb24gZGVidWdSb3V0ZXMoJHJvb3RTY29wZSwgJHN0YXRlLCAkc3RhdGVQYXJhbXMpIHtcclxuICAgIC8vIENyZWRpdHM6IEFkYW0ncyBhbnN3ZXIgaW4gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjA3ODYyNjIvNjkzNjJcclxuICAgIC8vIFBhc3RlIHRoaXMgaW4gYnJvd3NlcidzIGNvbnNvbGVcclxuXHJcbiAgICAvL3ZhciAkcm9vdFNjb3BlID0gYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbdWktdmlld11cIilbMF0pLmluamVjdG9yKCkuZ2V0KCckcm9vdFNjb3BlJyk7XHJcblxyXG4gICAgJHJvb3RTY29wZS4kc3RhdGUgPSAkc3RhdGU7XHJcbiAgICAkcm9vdFNjb3BlLiRzdGF0ZVBhcmFtcyA9ICRzdGF0ZVBhcmFtcztcclxuXHJcbiAgICAkcm9vdFNjb3BlLiRvbignJHN0YXRlQ2hhbmdlU3RhcnQnLCBmdW5jdGlvbiAoZXZlbnQsIHRvU3RhdGUsIHRvUGFyYW1zLCBmcm9tU3RhdGUsIGZyb21QYXJhbXMpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnJHN0YXRlQ2hhbmdlU3RhcnQgdG8gJyArIHRvU3RhdGUudG8gKyAnLSBmaXJlZCB3aGVuIHRoZSB0cmFuc2l0aW9uIGJlZ2lucy4gdG9TdGF0ZSx0b1BhcmFtcyA6IFxcbicsIHRvU3RhdGUsIHRvUGFyYW1zKTtcclxuICAgIH0pO1xyXG5cclxuICAgICRyb290U2NvcGUuJG9uKCckc3RhdGVDaGFuZ2VFcnJvcicsIGZ1bmN0aW9uIChldmVudCwgdG9TdGF0ZSwgdG9QYXJhbXMsIGZyb21TdGF0ZSwgZnJvbVBhcmFtcykge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCckc3RhdGVDaGFuZ2VFcnJvciAtIGZpcmVkIHdoZW4gYW4gZXJyb3Igb2NjdXJzIGR1cmluZyB0cmFuc2l0aW9uLicpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGFyZ3VtZW50cyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkcm9vdFNjb3BlLiRvbignJHN0YXRlQ2hhbmdlU3VjY2VzcycsIGZ1bmN0aW9uIChldmVudCwgdG9TdGF0ZSwgdG9QYXJhbXMsIGZyb21TdGF0ZSwgZnJvbVBhcmFtcykge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCckc3RhdGVDaGFuZ2VTdWNjZXNzIHRvICcgKyB0b1N0YXRlLm5hbWUgKyAnLSBmaXJlZCBvbmNlIHRoZSBzdGF0ZSB0cmFuc2l0aW9uIGlzIGNvbXBsZXRlLicpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJHJvb3RTY29wZS4kb24oJyR2aWV3Q29udGVudExvYWRlZCcsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCckdmlld0NvbnRlbnRMb2FkZWQgLSBmaXJlZCBhZnRlciBkb20gcmVuZGVyZWQnLCBldmVudCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkcm9vdFNjb3BlLiRvbignJHN0YXRlTm90Rm91bmQnLCBmdW5jdGlvbiAoZXZlbnQsIHVuZm91bmRTdGF0ZSwgZnJvbVN0YXRlLCBmcm9tUGFyYW1zKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJyRzdGF0ZU5vdEZvdW5kICcgKyB1bmZvdW5kU3RhdGUudG8gKyAnICAtIGZpcmVkIHdoZW4gYSBzdGF0ZSBjYW5ub3QgYmUgZm91bmQgYnkgaXRzIG5hbWUuJyk7XHJcbiAgICAgICAgY29uc29sZS5sb2codW5mb3VuZFN0YXRlLCBmcm9tU3RhdGUsIGZyb21QYXJhbXMpO1xyXG4gICAgfSk7XHJcbn0iLCJcclxuYW5ndWxhci5tb2R1bGUoJ2FwcC5zZWN0aW9ucycpXHJcblx0LnByb3ZpZGVyKCdzZWN0aW9uTWFuYWdlcicsIHNlY3Rpb25NYW5hZ2VyUHJvdmlkZXIpO1xyXG5cclxuLyogQG5nSW5qZWN0ICovXHJcbmZ1bmN0aW9uIHNlY3Rpb25NYW5hZ2VyUHJvdmlkZXIoJHN0YXRlUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSB7XHJcblxyXG5cdHZhciBjb25maWcgPSB7XHJcblx0XHRyZXNvbHZlQWx3YXlzOiB7fVxyXG5cdH1cclxuXHJcblx0dGhpcy5jb25maWd1cmUgPSBmdW5jdGlvbiAob3B0cykge1xyXG5cdFx0YW5ndWxhci5leHRlbmQoY29uZmlnLCBvcHRzKTtcclxuXHR9O1xyXG5cclxuXHQkbG9jYXRpb25Qcm92aWRlci5odG1sNU1vZGUodHJ1ZSk7XHJcblxyXG5cclxuXHR0aGlzLiRnZXQgPSBTZWN0aW9uTWFuYWdlclNlcnZpY2U7XHJcblxyXG5cdC8vIEBuZ0luamVjdFxyXG5cdGZ1bmN0aW9uIFNlY3Rpb25NYW5hZ2VyU2VydmljZSgkcm9vdFNjb3BlLCAkc3RhdGUpIHtcclxuXHJcblx0ICAgIHZhciBfc2VjdGlvbnMgPSBbXTtcclxuXHJcblx0XHR2YXIgc2VydmljZSA9IHtcclxuXHRcdFx0Z2V0U2VjdGlvbnM6IGdldFNlY3Rpb25zLFxyXG5cdFx0XHRyZWdpc3RlcjogcmVnaXN0ZXJTZWN0aW9ucyxcclxuICAgICAgICAgICAgZ2V0TW9kdWxlczogZ2V0TW9kdWxlc1xyXG5cdFx0fTtcclxuXHJcblx0XHRyZXR1cm4gc2VydmljZTtcclxuXHJcblx0XHRmdW5jdGlvbiByZWdpc3RlclNlY3Rpb25zKHNlY3Rpb25zKSB7XHJcblx0XHRcdHNlY3Rpb25zLmZvckVhY2goZnVuY3Rpb24gKHN0YXRlKSB7XHJcblx0XHRcdFx0c3RhdGUucmVzb2x2ZSA9XHJcblx0XHRcdFx0XHRhbmd1bGFyLmV4dGVuZChzdGF0ZS5yZXNvbHZlIHx8IHt9LCBjb25maWcucmVzb2x2ZUFsd2F5cyk7XHJcblx0XHRcdFx0JHN0YXRlUHJvdmlkZXIuc3RhdGUoc3RhdGUpO1xyXG5cdFx0XHRcdF9zZWN0aW9ucy5wdXNoKHN0YXRlKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlcygpIHtcclxuXHRcdCAgICByZXR1cm4gJHN0YXRlLmdldCgpLmZpbHRlcihmdW5jdGlvbiAoeCkge1xyXG5cdFx0ICAgICAgICByZXR1cm4geC5zZXR0aW5ncyAmJiB4LnNldHRpbmdzLm1vZHVsZTtcclxuXHRcdCAgICB9KTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRTZWN0aW9ucygpIHtcclxuXHRcdCAgICAvL3JldHVybiAkc3RhdGUuZ2V0KCk7XHJcblx0XHQgICAgcmV0dXJuIF9zZWN0aW9ucztcclxuXHRcdH1cclxuXHJcblx0fVxyXG59XHJcbiIsIlxyXG5hbmd1bGFyLm1vZHVsZSgnYXBwLmxvZ2dpbmcnLCBbXSk7IiwiXHJcbmFuZ3VsYXIubW9kdWxlKCdhcHAubG9nZ2luZycpXHJcbiAgICAuc2VydmljZSgnbG9nZ2VyJywgbG9nZ2VyU2VydmljZSk7XHJcblxyXG4vLyBAbmdJbmplY3RcclxuZnVuY3Rpb24gbG9nZ2VyU2VydmljZSgkbG9nKSB7XHJcblxyXG4gICAgdmFyIHNlcnZpY2UgPSB7XHJcbiAgICAgICAgaW5mbzogaW5mbyxcclxuICAgICAgICB3YXJuaW5nOiB3YXJuaW5nLFxyXG4gICAgICAgIGVycm9yOiBlcnJvcixcclxuICAgICAgICBsb2c6ICRsb2dcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIHNlcnZpY2U7XHJcblxyXG5cclxuICAgIGZ1bmN0aW9uIGluZm8obWVzc2FnZSwgZGF0YSkge1xyXG4gICAgICAgICRsb2cuaW5mbygnSW5mbzogJyArIG1lc3NhZ2UsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHdhcm5pbmcobWVzc2FnZSwgZGF0YSkge1xyXG4gICAgICAgICRsb2cuaW5mbygnV0FSTklORzogJyArIG1lc3NhZ2UsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGVycm9yKG1lc3NhZ2UsIGRhdGEpIHtcclxuICAgICAgICAkbG9nLmVycm9yKCdFUlJPUjogJyArIG1lc3NhZ2UsIGRhdGEpO1xyXG4gICAgfVxyXG59IiwiKGZ1bmN0aW9uICgpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxufSgpKTsiLCJhbmd1bGFyLm1vZHVsZSgnYXBwLmRhc2hib2FyZCcsIFsnYXBwLnNlY3Rpb25zJ10pXHJcbiAgICAucnVuKGFwcFJ1bik7XHJcbi8vLmNvbmZpZyhmdW5jdGlvbiAoJHN0YXRlUHJvdmlkZXIpIHtcclxuXHJcbi8vICAgICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdyb290Jywge1xyXG4vLyAgICAgICAgdXJsOiAnJyxcclxuLy8gICAgICAgIGFic3RyYWN0OiB0cnVlLFxyXG4vLyAgICAgICAgdGVtcGxhdGU6ICc8ZGl2IHVpLXZpZXc+PC9kaXY+J1xyXG4vLyAgICB9KTtcclxuXHJcbi8vICAgICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdkYXNoYm9hcmQnLCB7XHJcbi8vICAgICAgICB1cmw6ICcnLFxyXG4vLyAgICAgICAgcGFyZW50OiAncm9vdCcsXHJcbi8vICAgICAgICBjb250cm9sbGVyOiAnRGFzaGJvYXJkQ29udHJvbGxlcicsXHJcbi8vICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbi8vICAgICAgICB0ZW1wbGF0ZVVybDogJ2FwcC9hcmVhcy9kYXNoYm9hcmQvZGFzaGJvYXJkLmh0bWwnXHJcbi8vICAgIH0pO1xyXG5cclxuLy99KTtcclxuXHJcbmZ1bmN0aW9uIGFwcFJ1bihzZWN0aW9uTWFuYWdlcikge1xyXG5cclxuICAgIHNlY3Rpb25NYW5hZ2VyLnJlZ2lzdGVyKGdldFN0YXRlcygpKTtcclxuXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFN0YXRlcygpIHtcclxuICAgIHJldHVybiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAnZGFzaGJvYXJkJyxcclxuICAgICAgICAgICAgdXJsOiAnJyxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogJ0Rhc2hib2FyZENvbnRyb2xsZXInLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnYXBwL2FyZWFzL2Rhc2hib2FyZC9kYXNoYm9hcmQuaHRtbCcsXHJcbiAgICAgICAgICAgIHNldHRpbmdzOiB7XHJcbiAgICAgICAgICAgICAgICBtb2R1bGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBvcmRlcjogMVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXVxyXG59IiwiXHJcbmFuZ3VsYXIubW9kdWxlKCdhcHAuZGFzaGJvYXJkJylcclxuICAgIC5jb250cm9sbGVyKCdEYXNoYm9hcmRDb250cm9sbGVyJywgRGFzaGJvYXJkQ29udHJvbGxlcik7XHJcblxyXG4vLyBAbmdJbmplY3RcclxuZnVuY3Rpb24gRGFzaGJvYXJkQ29udHJvbGxlcigpIHtcclxuICAgIHRoaXMubWVzc2FnZSA9IFwiSGVsbG8gV29ybGRcIjtcclxufSIsImFuZ3VsYXIubW9kdWxlKCdhcHAubGF5b3V0JywgWyd1aS5ib290c3RyYXAnXSk7ICIsImFuZ3VsYXIubW9kdWxlKCdhcHAubGF5b3V0JylcclxuICAgIC5jb250cm9sbGVyKCdTaGVsbENvbnRyb2xsZXInLCBTaGVsbENvbnRyb2xsZXIpO1xyXG5cclxuLyogQG5nSW5qZWN0ICovXHJcbmZ1bmN0aW9uIFNoZWxsQ29udHJvbGxlcihzZWN0aW9uTWFuYWdlcikge1xyXG5cclxuICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICB2bS5zZWN0aW9ucyA9IHNlY3Rpb25NYW5hZ2VyLmdldE1vZHVsZXMoKTtcclxuXHJcbn0iLCIoZnVuY3Rpb24gKCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG59KCkpOyIsImFuZ3VsYXIubW9kdWxlKCdzb2xvbW9uJyxcclxuICAgIFtcclxuICAgICAgICAnYXBwLmxheW91dCcsXHJcbiAgICAgICAgJ2FwcC5sb2dnaW5nJyxcclxuICAgICAgICAnYXBwLnNlY3Rpb25zJyxcclxuICAgICAgICAnc29sb21vbi5wYXJ0aWFscycsXHJcbiAgICAgICAgJ2FwcC5kYXNoYm9hcmQnLFxyXG4gICAgICAgICdzeW1iaW90ZS5jb21tb24nXHJcbiAgICBdKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=